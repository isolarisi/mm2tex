&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем СтроковыеУтилиты;

#Область ИнтерфейсТестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	СтроковыеУтилиты = КонтекстЯдра.Плагин("СтроковыеУтилиты");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.Добавить("ТестДолжен_ПроверитьНаличиеРеквизита_ИмяФайла", , "Проверка наличия реквизита ""ИмяФайла""");
	НаборТестов.Добавить("ТестДолжен_ПроверитьТипРеквизита_ИмяФайла_Строка500", , "Проверка типа реквизита ""ИмяФайла"" = Строка(500)");
	НаборТестов.Добавить("ТестДолжен_ПроверитьРезультатЧтенияФайла", , "Проверка результата чтения файла");
КонецПроцедуры 

#КонецОбласти

#Область СамиТесты

&НаКлиенте
Процедура ТестДолжен_ПроверитьНаличиеРеквизита_ИмяФайла() Экспорт

	Ожидаем.Что(ПроверитьНаличиеРеквизита("ИмяФайла"), "У обработки нет реквизита ""Имя файла""").ЭтоИстина();
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьТипРеквизита_ИмяФайла_Строка500() Экспорт

	Ожидаем.Что(ПроверитьТипРеквизита("ИмяФайла"), "У реквизита обработки ""Имя файла"" тип не Строка(500)").ЭтоИстина();
	
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьРезультатЧтенияФайла() Экспорт
	ФормаОбработки = ПолучитьФормуОбработки();
	ФормаОбработки.Объект.ИмяФайла = "D:\mm2tex\tests\data\Тест.mm";
	РезультатЧтенияФайла = ФормаОбработки.РазобратьXML();
	Ожидаем.Что(ТипЗнч(РезультатЧтенияФайла), "Результат чтения файла должна быть Структура").Равно(Тип("Структура"));
	Ожидаем.Что(РезультатЧтенияФайла.node.TEXT).Равно("Титульный лист");
	Ожидаем.Что(РезультатЧтенияФайла.node.node[0].TEXT).Равно("Раздел 1");
	Ожидаем.Что(РезультатЧтенияФайла.node.node[0].node[1].TEXT).Равно("Подраздел 2");
	Ожидаем.Что(РезультатЧтенияФайла.node.node[0].node[1].node.TEXT).Равно("ПодПодРаздел3");
	Ожидаем.Что(РезультатЧтенияФайла.node.node[0].node[0].node[0].TEXT).Равно("ПодПодРаздел1");
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеВызовы

&НаСервере
Функция ПроверитьНаличиеРеквизита(ИмяРеквизита)                                                           
	ВнешняяОбработка = ВнешниеОбработки.Создать("D:\mm2tex\build\mm2tex.epf");
	Возврат ОбщегоНазначения.ЕстьРеквизитОбъекта(ИмяРеквизита,  ВнешняяОбработка.Метаданные());
КонецФункции

&НаСервере
Функция ПроверитьТипРеквизита(ИмяРеквизита)                                                           
	ВнешняяОбработка = ВнешниеОбработки.Создать("D:\mm2tex\build\mm2tex.epf");
	ТипЗначения = ОбщегоНазначения.ОписаниеТипаСтрока(500);  
	Возврат ВнешняяОбработка.Метаданные().Реквизиты.ИмяФайла.Тип = ТипЗначения;
КонецФункции

&НаКлиенте
Функция ПолучитьФормуОбработки()

    //Помещаем обработку во временном хранилище
    АдресХранилища = "";
    Результат = ПоместитьФайл(АдресХранилища, "D:\mm2tex\build\mm2tex.epf", , Ложь);           
    ИмяОбработки = ПодключитьВнешнююОбработку(АдресХранилища);
    
    // Откроем форму подключенной внешней обработки
    Возврат ПолучитьФорму("ВнешняяОбработка."+ ИмяОбработки +".Форма");

КонецФункции

&НаСервере
Функция ПодключитьВнешнююОбработку(АдресХранилища)

    Возврат ВнешниеОбработки.Подключить(АдресХранилища,,Ложь);

КонецФункции       

#КонецОбласти
